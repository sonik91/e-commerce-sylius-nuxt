services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    #custom serialiser
    App\Serializer\ProductNormalizer:
        arguments:
            $priceCalculator: '@sylius.calculator.product_variant_price'
            $defaultProductVariantResolver: '@sylius.resolver.product_variant'
            $iriConverter: '@api_platform.iri_converter'
            $sectionProvider: '@sylius.section_resolver.uri_based'
            $serializationGroups: ['sylius:shop:product:index', 'sylius:shop:product:show']
        tags:
            - { name: 'serializer.normalizer', priority: 70 }

    App\Serializer\OrderNormalizer:
        arguments:
            $filterService: '@liip_imagine.service.filter'
            $sectionProvider: '@sylius.section_resolver.uri_based'
            $serializationGroups: ['sylius:shop:order:index', 'sylius:shop:order:show', 'sylius:shop:cart:show', 'sylius:shop:cart:change_quantity', 'sylius:shop:order:account:show']
        tags:
            - { name: 'serializer.normalizer', priority: 100 }

    App\Serializer\CustomerNormalizer:
        arguments:
            $sectionProvider: '@sylius.section_resolver.uri_based'
            $serializationGroups: ['sylius:shop:customer:show', 'sylius:shop:customer:create', 'sylius:shop:customer:update']
        tags:
            - { name: 'serializer.normalizer', priority: 100 }
